head	1.8;
access;
symbols;
locks
	claude:1.8; strict;
comment	@ * @;


1.8
date	2022.05.15.13.26.41;	author claude;	state Exp;
branches;
next	1.7;

1.7
date	2022.05.14.15.36.32;	author claude;	state Exp;
branches;
next	1.6;

1.6
date	2022.05.01.12.43.39;	author claude;	state Exp;
branches;
next	1.5;

1.5
date	2022.04.29.21.48.10;	author claude;	state Exp;
branches;
next	1.4;

1.4
date	2022.04.22.20.39.20;	author claude;	state Exp;
branches;
next	1.3;

1.3
date	2022.04.14.17.45.17;	author claude;	state Exp;
branches;
next	1.2;

1.2
date	2022.04.14.17.42.34;	author claude;	state Exp;
branches;
next	1.1;

1.1
date	2022.04.14.17.39.17;	author claude;	state Exp;
branches;
next	;


desc
@Initial
@


1.8
log
@BIT_LED.
@
text
@//======================================================================
// $RCSfile: main.c,v $
// $Revision: 1.7 $
// $Date: 2022/05/14 15:36:32 $
// $Author: claude $
//
//	BLINK:	Default blink test application @@ 1s interval
//
//	BOARD:	Arduino Nano v3 (Abra Electronics)
//		16MHz external clock
//
//      WIRING:
//              LED:    PB5
//
//	Calculations for TIMER1
//		16MHz / 1024            = 15625         -- 1s
//		16MHz / 1024  / 20      = 781           -- 50ms
//		16MHz / 1024  / 100     = 156           -- 10ms
//		16MHz / 1024  / 1000    = 16            -- 1ms
//
//		TNCT1 = 65536 - 15625 = 49911		-- 1s timer
//
//======================================================================
// (c) 2022 Claude Benoit - All Right Reserved
//======================================================================
#include <avr/io.h>
#include <avr/interrupt.h>

//-----------------------------------------------------------
//---- Defines 
//-----------------------------------------------------------
#define	TM1_COUNT	49911		// See calculations above
#define	BIT_LED		0b00100000	// PB5 (Default LED)

//-----------------------------------------------------------
//---- ISR - TIMER 1 Interrupt Service Routine
//-----------------------------------------------------------
ISR( TIMER1_OVF_vect )
{
	TCNT1  = TM1_COUNT;	// Reset count for TIMER 1 (16 bits)
	PORTB ^= BIT_LED;	// Toggle LED pin
}

//===========================================================
//====
//==== Main -- Initialize TIMER1, LED(PB5), and loop
//====
//===========================================================
int main()
{
	DDRB	|= BIT_LED;	// Enable LED pin as OUTPUT
	TCNT1	= TM1_COUNT;	// Reset count for TIMER 1 (16 bits)
	TCCR1A	= 0b00000000;	// Timer/Counter 1 Register A - Reset
	TCCR1B	= 0b00000101;	// Timer/Control 1 Register B - Set 1024 prescaler
	TIMSK1	= 0b00000001;	// Timer/Counter 1 Interrupt Mask Resigter - Overflow Interrupt Overflow Enabled
	sei();			// Enable interrupts

	//---- Infinite loop, waiting for interrupts
	for(;;) {}
}
@


1.7
log
@updated for new programmer.
@
text
@d3 2
a4 2
// $Revision: 1.6 $
// $Date: 2022/05/01 12:43:39 $
d32 2
a33 1
#define	TM1_COUNT	49911	// See calculations above
d41 1
a41 1
	PORTB ^= 0b00100000;    // Toggle PB5 (Default LED)
d51 1
a51 1
	DDRB	|= 0b00100000;	// Enable PB5 as OUTPUT (Default LED)
@


1.6
log
@woring.
@
text
@d3 2
a4 2
// $Revision: 1.1 $
// $Date: 2022/04/30 00:43:17 $
d7 1
a7 1
//	BLINK: Default blink test application @@ 1s interval
d9 2
a10 1
//	BOARD: Arduino Nano v3 (Abra Electronics)
d32 1
a32 1
#define	TM1_COUNT	49911
@


1.5
log
@BLINK 125ms loop
@
text
@d3 2
a4 2
// $Revision: 1.4 $
// $Date: 2022/04/22 20:39:20 $
d7 1
a7 1
//	BLINK: Default blink test application 
d11 10
a24 1

d29 1
a29 1
//----- Defines for TIMER1
d31 1
a32 3
#define	TM1_COUNT_125MS	63974		// 125ms delay at 16MHz

//-----------------------------------------------------------
d34 1
a35 3

static	int	g_iCount = 0;

d38 2
a39 7
	g_iCount ++;
	if ( g_iCount == 7 )
	{
		PORTB ^= 0b00100000;	// Toggle PB5 (Default LED)
		g_iCount = 0;
	}
	TCNT1 = TM1_COUNT_125MS;	// Reset Counter
d42 5
a46 5
//-----------------------------------------------------------
//-----------------------------------------------------------
//-----------------------------------------------------------


d49 6
a54 6
	DDRB	|= 0b00100000;		// Enable PB5 as OUTPUT (Default LED)
	TCNT1	= TM1_COUNT_125MS;	// Reset count for TIMER 1 (16 bits)
	TCCR1A	= 0b00000000;		// Timer/Counter 1 Register A - Reset
	TCCR1B	= 0b00000101;		// Timer/Control 1 Register B - Set 1024 prescaler
	TIMSK1	= 0b00000001;		// Timer/Counter 1 Interrupt Mask Resigter - Overflow Interrupt Overflow Enabled
	sei();				// Enable interrupts
@


1.4
log
@update
@
text
@d3 2
a4 2
// $Revision: 1.3 $
// $Date: 2022/04/14 17:45:17 $
d7 6
a15 1

d20 1
a20 12

#define	L_DDRB	(*(volatile unsigned char*)  0x24 )
#define	L_PORTB	(*(volatile unsigned char*)  0x25 )
#define	L_BIT5	0x20

//-----------------------------------------------------------

void delay_on( long d );
void delay_off( long d );
void flashled();

//-----------------------------------------------------------
a21 2
//-----------------------------------------------------------

d23 1
a23 5
ISR(INT0_vect)
{
	delay_on(  10000L );
	delay_off( 10000L );
}
d29 1
d31 1
a31 1
int main()
d33 2
a34 8
	DDRB |= L_BIT5;
	DDRD = 0xE0;
	EIMSK = 0x01;
	MCUCR = 0x08;

	sei();

	for(;;)
d36 2
a37 2

//		flashled();
d39 1
a41 2


d47 1
a47 1
void delay_on( long d )
d49 6
a54 3
	for ( long i=0L; i<d; i++ )
		L_PORTB |= L_BIT5;
}
d56 2
a57 4
void delay_off( long d )
{
	for ( long i=0L; i<d; i++ )
		L_PORTB &= ~L_BIT5;
a58 7

void flashled()
{
	delay_on(   100000L );
	delay_off( 1000000L );
}

@


1.3
log
@tokens, fixed
@
text
@d2 3
a4 3
// $RCSfile: $
// $Revision: 1.2 $
// $Date: 2022/04/14 17:42:34 $
a34 2

	reti();
@


1.2
log
@tokens
@
text
@d2 4
a5 4
// $Logfile: $
// $Revision: $
// $Date: $
// $Author: $
@


1.1
log
@Initial revision
@
text
@d1 10
@
